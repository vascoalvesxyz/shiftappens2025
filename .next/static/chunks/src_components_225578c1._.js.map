{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/gvst/SHIFT2025/shiftappens2025/src/components/three/OfficeDrawer.tsx"],"sourcesContent":["import { useGLTF } from \"@react-three/drei\";\nimport { useThree } from \"@react-three/fiber\";\n\nimport { useRef, useEffect } from \"react\";\nimport {\n  Group,\n  Object3D,\n  MeshStandardMaterial,\n  Raycaster,\n  Vector2,\n} from \"three\";\nimport gsap from \"gsap\";\n\nexport default function MyModel(props: JSX.IntrinsicElements[\"group\"]) {\n  const group = useRef<Group>(null);\n  const { scene, camera, gl } = useThree();\n  const { scene: modelScene } = useGLTF(\"/models/office_file_cabinet.glb\");\n\n  const drawers: Object3D[] = [];\n\n  useEffect(() => {\n    if (!modelScene) return;\n\n    modelScene.traverse((child) => {\n      if (/^\\d{2}$/.test(child.name)) {\n        child.position.y = 0;\n        drawers.push(child);\n      }\n\n      if ((child as any).material) {\n        const mat = (child as any).material as MeshStandardMaterial;\n        mat.needsUpdate = true;\n      }\n    });\n\n    const raycaster = new Raycaster();\n    const mouse = new Vector2();\n\n    const handleClick = (event: MouseEvent) => {\n      const bounds = gl.domElement.getBoundingClientRect();\n      mouse.x = ((event.clientX - bounds.left) / bounds.width) * 2 - 1;\n      mouse.y = -((event.clientY - bounds.top) / bounds.height) * 2 + 1;\n\n      raycaster.setFromCamera(mouse, camera);\n\n      const intersects = raycaster.intersectObjects(drawers, true);\n      if (intersects.length > 0) {\n        const target = drawers.find((d) =>\n          intersects[0].object.name.includes(d.name),\n        );\n        if (target) {\n          const isOpen = target.position.y < -0.1;\n          gsap.to(target.position, {\n            y: isOpen ? 0 : -0.2,\n            duration: 0.6,\n            ease: \"power2.inOut\",\n          });\n        }\n      }\n    };\n\n    gl.domElement.addEventListener(\"click\", handleClick);\n    return () => gl.domElement.removeEventListener(\"click\", handleClick);\n  }, [modelScene, camera, gl]);\n\n  return (\n    <>\n      <ambientLight intensity={0.6} />\n      <directionalLight intensity={1} position={[2, 3, 2]} />\n      <primitive ref={group} object={modelScene} {...props} />\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;AACA;AAOA;;;;;;;;AAEe,SAAS,QAAQ,KAAqC;;IACnE,MAAM,QAAQ,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAS;IAC5B,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,GAAG,CAAA,GAAA,kNAAA,CAAA,WAAQ,AAAD;IACrC,MAAM,EAAE,OAAO,UAAU,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE;IAEtC,MAAM,UAAsB,EAAE;IAE9B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6BAAE;YACR,IAAI,CAAC,YAAY;YAEjB,WAAW,QAAQ;qCAAC,CAAC;oBACnB,IAAI,UAAU,IAAI,CAAC,MAAM,IAAI,GAAG;wBAC9B,MAAM,QAAQ,CAAC,CAAC,GAAG;wBACnB,QAAQ,IAAI,CAAC;oBACf;oBAEA,IAAI,AAAC,MAAc,QAAQ,EAAE;wBAC3B,MAAM,MAAM,AAAC,MAAc,QAAQ;wBACnC,IAAI,WAAW,GAAG;oBACpB;gBACF;;YAEA,MAAM,YAAY,IAAI,kJAAA,CAAA,YAAS;YAC/B,MAAM,QAAQ,IAAI,kJAAA,CAAA,UAAO;YAEzB,MAAM;iDAAc,CAAC;oBACnB,MAAM,SAAS,GAAG,UAAU,CAAC,qBAAqB;oBAClD,MAAM,CAAC,GAAG,AAAC,CAAC,MAAM,OAAO,GAAG,OAAO,IAAI,IAAI,OAAO,KAAK,GAAI,IAAI;oBAC/D,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,OAAO,GAAG,OAAO,GAAG,IAAI,OAAO,MAAM,IAAI,IAAI;oBAEhE,UAAU,aAAa,CAAC,OAAO;oBAE/B,MAAM,aAAa,UAAU,gBAAgB,CAAC,SAAS;oBACvD,IAAI,WAAW,MAAM,GAAG,GAAG;wBACzB,MAAM,SAAS,QAAQ,IAAI;oEAAC,CAAC,IAC3B,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI;;wBAE3C,IAAI,QAAQ;4BACV,MAAM,SAAS,OAAO,QAAQ,CAAC,CAAC,GAAG,CAAC;4BACpC,gJAAA,CAAA,UAAI,CAAC,EAAE,CAAC,OAAO,QAAQ,EAAE;gCACvB,GAAG,SAAS,IAAI,CAAC;gCACjB,UAAU;gCACV,MAAM;4BACR;wBACF;oBACF;gBACF;;YAEA,GAAG,UAAU,CAAC,gBAAgB,CAAC,SAAS;YACxC;qCAAO,IAAM,GAAG,UAAU,CAAC,mBAAmB,CAAC,SAAS;;QAC1D;4BAAG;QAAC;QAAY;QAAQ;KAAG;IAE3B,qBACE;;0BACE,6LAAC;gBAAa,WAAW;;;;;;0BACzB,6LAAC;gBAAiB,WAAW;gBAAG,UAAU;oBAAC;oBAAG;oBAAG;iBAAE;;;;;;0BACnD,6LAAC;gBAAU,KAAK;gBAAO,QAAQ;gBAAa,GAAG,KAAK;;;;;;;;AAG1D;GA3DwB;;QAEQ,kNAAA,CAAA,WAAQ;QACR,2JAAA,CAAA,UAAO;;;KAHf","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///home/gvst/SHIFT2025/shiftappens2025/src/components/MainCanvas.tsx"],"sourcesContent":["\"use client\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls, Edges } from \"@react-three/drei\";\nimport { useState } from \"react\";\nimport Chest from \"./three/Chest\";\nimport OfficeDrawer from \"./three/OfficeDrawer\";\n\nexport default function ThreeScene(): JSX.Element {\n  const test = () => {\n    console.log(\"Red cube clicked\");\n  };\n\n  const [selectedId, setSelectedId] = useState<number | null>(null);\n\n  return (\n    <Canvas camera={{ position: [10, 10, 10], fov: 60 }}>\n      <ambientLight intensity={1} />\n      <gridHelper args={[10, 5]} />\n      <OrbitControls />\n\n      <OfficeDrawer position={[0, 0, 0]} />\n    </Canvas>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAEA;;;AALA;;;;;AAOe,SAAS;;IACtB,MAAM,OAAO;QACX,QAAQ,GAAG,CAAC;IACd;IAEA,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAE5D,qBACE,6LAAC,sMAAA,CAAA,SAAM;QAAC,QAAQ;YAAE,UAAU;gBAAC;gBAAI;gBAAI;aAAG;YAAE,KAAK;QAAG;;0BAChD,6LAAC;gBAAa,WAAW;;;;;;0BACzB,6LAAC;gBAAW,MAAM;oBAAC;oBAAI;iBAAE;;;;;;0BACzB,6LAAC,oKAAA,CAAA,gBAAa;;;;;0BAEd,6LAAC,8IAAA,CAAA,UAAY;gBAAC,UAAU;oBAAC;oBAAG;oBAAG;iBAAE;;;;;;;;;;;;AAGvC;GAhBwB;KAAA","debugId":null}}]
}